plot(fit.coffee, which = 1:2)
coffee.fit2 <- aov(log(coffee) ~ density + location, data = d.coffee)
coffee.fit2 <- aov(log(coffee) ~ density + location, data = coffee)
par(mfrow = c(1, 2))
plot(coffee.fit2, which = 1:2)
1.95/1.14
setwd("./Repos/Applied-ANOVA/")
legierung <- read.table("http://stat.ethz.ch/Teaching/Datasets/WBL/legierung.dat",
header = TRUE)
View(legierung)
factor.cols <- c("day", "temp" ,"alloy")
factor.cols <- c("day", "temp" ,"alloy")
legierung[factor.cols] <- lapply(legierung[factor.cols], factor)
View(legierung)
class(legierung)
summary(legierung)
head(legierung)
str(legierung)
View(legierung)
library(lmerTest)
fit.alloy <- lmer(breaking ~ temp * alloy + day + (1 | day:alloy), data = legierung)
summary(fit.alloy)
fit.alloy <- lmer(breaking ~ temp * alloy + day + (1 | day:temp), data = legierung)
summary(fit.alloy)
confint(fit.alloy)
confint(fit.alloy, oldNames = FALSE)
par(mfrow = c(1, 2))
plot.design(legierung)
with(legierung, interaction.plot(x.factor = temp, trace.factor = alloy,
response = breaking))
anova(fit.alloy)
plot(fit)
par(mfrow=c(1,1))
plot(fit.alloy)
par(mfrow = c(1, 2))
qqnorm(ranef(fit)$"day:temp"[, 1])
qqnorm(resid(fit))
qqnorm(ranef(fit.alloy)$"day:temp"[, 1])
qqnorm(resid(fit.alloy))
#4
nitrogen <- read.table("http://stat.ethz.ch/Teaching/Datasets/nitrogen.dat",
header = TRUE)
View(nitrogen)
nit.factor.cols <- c("nitrogen", "block", "thach")
nitrogen[nit.factor.cols] <- lapply(nitrogen[nit.factor.cols], factor)
nit.factor.cols <- c("nitrogen", "block", "thatch")
nitrogen[nit.factor.cols] <- lapply(nitrogen[nit.factor.cols], factor)
str(nitrogen)
plot.design(nitrogen)
with(nitrogen, interaction.plot(x.factor = thatch, trace.factor = nitrogen,
response = chlorophile))
with(nitrogen, interaction.plot(x.factor = thatch, trace.factor = nitrogen,
response = chlorophyll))
fit.nitro <- lmer(chlorophyll ~ nitrogen * thatch + block + (1| nitrogen:block),
data = nitrogen)
summary(fit.nitro)
anova(fit.nitro)
confint(fit.nitro, oldNames = FALSE)
par(mfrow=c(1,1))
plot(fit.nitro)
par(mfrow = c(1, 2))
qqnorm(ranef(fit.nitro)$"nitrogen:block"[, 1])
qqnorm(resid(fit.nitro))
fit.nitro2 <- lmer(chlorophyll ~ nitrogen + thatch + block + (1| nitrogen:block),
data = nitrogen)
summary(fit.nitro2)
summary(fit.nitro2)$coefficients
library(ibd)
bibd1 <- ibd(v = 4, b = 6, k = 2)
bibd1$design
install.packages("ibd")
library(ibd)
bibd1 <- ibd(v = 4, b = 6, k = 2)
bibd1$design
bibd$conc.mat
1
bibd1 <- ibd(v = 4, b = 6, k = 2)
bibd1$conc.mat
bibd1$design
bibd2 <- ibd(v = 7, b = 7, k = 3)
bibd2$design
bibd2$conc.mat
read.table('http://stat.ethz.ch/Teaching/Datasets/WBL/ibd.dat',
headers = TRUE)
ibd <- read.table('http://stat.ethz.ch/Teaching/Datasets/WBL/ibd.dat',
header = TRUE)
View(ibd)
ibd.factors <- c("block", "treatment")
ibd[ibd.factors] <- lapply(ibd[ibd.factors], factor)
str(ibd)
xtabs(~treatment)
xtabs(~treatment, data = ibd)
xtabs(treatment~treatment, data = ibd)
xtabs(block~treatment, data = ibd)
xtabs(~treatment, data = ibd)
xtabs(~treatment + block, data = ibd)
d <- t(apply(ibd, 1, function(x) (1:ncol(ibd))[x != 0]))
d
# 2
ibd <- read.table('http://stat.ethz.ch/Teaching/Datasets/WBL/ibd.dat',
header = TRUE)
xtabs(~treatment + block, data = ibd)
d <- t(apply(ibd, 1, function(x) (1:ncol(ibd))[x != 0]))
d
# 2
ibd <- read.table('http://stat.ethz.ch/Teaching/Datasets/WBL/ibd.dat',
header = TRUE)
str(ibd)
# 2
library(crosstab)
isGYD(d)
crossdes
# 2
library(crossdes)
install.packages("crossdes")
# 2
library(crossdes)
d <- t(apply(ibd, 1, function(x) (1:ncol(ibd))[x != 0]))
isGYD(d)
ibd <- read.table('http://stat.ethz.ch/Teaching/Datasets/WBL/ibd.dat',
header = TRUE)
xtabs(~treatment + block, data = ibd)
d <- t(apply(ibd, 1, function(x) (1:ncol(ibd))[x != 0]))
isGYD(d)
ibd <- read.table('http://stat.ethz.ch/Teaching/Datasets/WBL/ibd.dat',
header = TRUE)
tab <- xtabs(~block + treatment, data = ibd)
d <- t(apply(tab, 1, function(x) (1:ncol(tab))[x != 0]))
isGYD(d)
tab
(1:ncol(tab))
(1:ncol(tab))[x != 0]
x = tab[1]
(1:ncol(tab))[x != 0]
x = tab[,1]
(1:ncol(tab))[x != 0]
x = tab[1,]
(1:ncol(tab))[x != 0]
ibd.factors <- c("block")
stripchart(y ~ block + treatment, vertical = TRUE)
stripchart(y ~ block + treatment, data = ibd, vertical = TRUE)
stripchart(y ~ block + treatment, data = ibd, vertical = FALSE)
stripchart(~ block + treatment, data = ibd, vertical = TRUE)
stripchart(y ~ block + treatment, data = ibd, vertical = TRUE, method = "jitter")
stripchart(y ~ block, data = ibd, vertical = TRUE, method = "jitter")
stripchart(y ~ block, data = ibd, vertical = TRUE)
stripchart(y ~ treatment, data = ibd, vertical = TRUE)
library(lmerTest)
fit.ibd <- lmer(y ~ treatment + block, data = ibd)
fit.ibd <- aov(y ~ treatment + block, data = ibd)
summary(fit.bid)
summary(fit.idb)
summary(fit.ibd)
fit.ibd <- aov(y ~ block + treatment, data = ibd)
summary(fit.ibd)
str(ibd)
ibd <- read.table('http://stat.ethz.ch/Teaching/Datasets/WBL/ibd.dat',
header = TRUE)
tab <- xtabs(~block + treatment, data = ibd)
d <- t(apply(tab, 1, function(x) (1:ncol(tab))[x != 0]))
isGYD(d)
ibd.factors <- c("block")
ibd[ibd.factors] <- lapply(ibd[ibd.factors], factor)
str(ibd)
stripchart(y ~ block, data = ibd, vertical = TRUE)
stripchart(y ~ treatment, data = ibd, vertical = TRUE)
fit.ibd <- aov(y ~ block + treatment, data = ibd)
summary(fit.ibd)
drop1(fit.ibd)
drop1(fit.ibd, test = "Chisq")
drop1(fit.ibd, test = "F")
par(mfrow = c(1, 2))
plot(fit, which = 1:2)
par(mfrow = c(1, 2))
plot(fit.ibd, which = 1:2)
TukeyHSD(fit.ibd)
getwd()
setwd("../Applied-Regression/")
library(mgcv)
source("resplot.R")
TA.plot.bin.model <- function(model){
xx <- predict(model, type="response")
yy <- residuals(model, type="deviance")
plot(yy ~ xx, main = "Tukey-Anscombe 1", xlab = "fitted probabilities",
ylab = "deviance resid")
lines(loess.smooth(xx, yy, family="gaussian", pch=20), col = "red")
abline(h=0, lty=3)
}
car <- read.table("http://stat.ethz.ch/Teaching/Datasets/car.dat",header=T)
plot(age ~ income, data=car, log="x", type="n")
points(age ~ income, subset=(purchase==0), data=car, pch = 7, col = "red")
points(age ~ income, subset=(purchase==1), data=car, pch = 16, col = "blue")
title("Purchase")
fit.car <- glm(purchase ~ income + age, family = binomial, data = car)
summary(fit.car)
View(car)
beta.income = coefficients(fit.car)["income"]
beta.age = coefficients(fit.car)["age"]
exp(beta.incom)
exp(beta.income)
exp(beta.age)
c <- predict(fit.car, newdata=data.frame(age=3, income=50))
c
c <- predict(fit.car, newdata=data.frame(age=3, income=50), type = "response")
c
TA.plot.bin.model(fit.car)
plot(fit.car, which = 5)
drop1(fit.car)
drop1(fit.car, test = "Chisq")
fit.car.inter <- glm(purchase ~ income + age + income*age, family = binomial, data = car)
summary(fit.car.inter)
drop1(fit.car.itner)
drop1(fit.car.inter, test = "Chisq")
no.yes <- c("No", "Yes")
smoking <- gl(2,1,7, no.yes)
obesity <- gl(2,2,7, no.yes)
snoring <- gl(2,4,7, no.yes)
n.total <- c(60, 17, 8, 187, 85, 51, 23)
n.hyper <- c(5, 2, 1, 35, 13, 15, 8)
hyper <- cbind(yes = n.hyper, no = n.total - n.hyper)
fit.hyper <- glm(hyper ~ smoking + obesity + snoring, family = binomial)
summary(fit.hyper)
hyper
deviance(fit.hyper)
pchisq(deviance(fit.hyper), df.residual(fit.hyper), lower = FALSE)
TA.plot.bin.model(fit.hyper)
plot(fit.hyper, which = 5)
fit.hyper$null.deviance
fit.hyper$deviance
fit.hyper$df.null - df.residual()
fit.hyper$df.null - fit.hyper$df.residual
#global lr test
pchisq(fit.hyper$null.deviance - fit.hyper$deviance,
df = fit.hyper$df.null - fit.hyper$df.residual)
#global lr test
pchisq(fit.hyper$null.deviance - fit.hyper$deviance,
df = fit.hyper$df.null - fit.hyper$df.residual, lower = FALSE)
drop1(fit.hyper, test="Chisq")
fit.hyper1 <- glm(hyper ~ obesity + snoring, family = binomial)
summary(fit.hyper1)
drop1(fit.hyper1)
drop1(fit.hyper1, test="Chisq")
pchisq(fit.hyper$deviance, df = fit.hyper$df.residual, lower = FALSE)
pchisq(fit.hyper1$deviance, df = fit.hyper1$df.residual, lower = FALSE)
#3
nematodes <- read.csv("nematodes.csv", header=TRUE)
nematodes$Sample <- as.factor(nematodes$Sample)
fit.nem <- glm(Nematodes ~ Sample, family=poisson, data=nematodes)
summary(fit.nem)
fit.nem.gam <- gam(Nematodes ~ Sample, family=poisson, data=nematodes)
summary(fit.nem.gam)
drop1(fit.nem, test="Chisq")
View(nematodes)
TA.plot.bin.model(fit.nem)
plot(fit.nem, which = 5)
fit.nem.lr <- glm(Nematodes ~ log(Volume), family=poisson, data=nematodes)
summary(fit.nem.lr)
pchisq(fit.nem.lr$deviance, df = fit.nem.lr$df.residual, lower = FALSE)
pension <- read.dta("http://fmwww.bc.edu/ec-p/data/wooldridge2k/pension.dta")
#3
nematodes <- read.csv("nematodes.csv", header=TRUE)
nematodes$Sample <- as.factor(nematodes$Sample)
nematodes$Volume <- as.factor(nematodes$Volume)
fit.nem <- glm(Nematodes ~ Sample, family=poisson, data=nematodes)
summary(fit.nem)
View(nematodes)
nematodes <- read.csv("nematodes.csv", header=TRUE)
nematodes$Sample <- as.factor(nematodes$Sample)
nematodes$Volume <- as.factor(nematodes$Volume)
fit.nem <- glm(Nematodes ~ Sample, family=poisson, data=nematodes)
summary(fit.nem)
# fit.nem.gam <- gam(Nematodes ~ Sample, family=poisson, data=nematodes)
# summary(fit.nem.gam)
drop1(fit.nem, test="Chisq")
fit.nem.lr <- glm(Nematodes ~ log(Volume), family=poisson, data=nematodes)
summary(fit.nem.lr)
TA.plot.bin.model(fit.nem)
plot(fit.nem, which = 5)
fit.nem.lr <- glm(Nematodes ~ log(Volume), family=poisson, data=nematodes)
summary(fit.nem.lr)
# need numeric volume
nematodes <- read.csv("nematodes.csv", header=TRUE)
nematodes$Sample <- as.factor(nematodes$Sample)
fit.nem.lr <- glm(Nematodes ~ log(Volume), family=poisson, data=nematodes)
summary(fit.nem.lr)
pchisq(fit.nem.lr$deviance, df = fit.nem.lr$df.residual, lower = FALSE)
confint(fit.nem.lr)
fit.nem.lr.offset <- glm(Nematodes ~ offset(log(Volume)), family = poisson, data = nematodes)
summary(fit.nem.lr.offset)
pchisq(fit.nem.lr.offset$deviance, df = fit.nem.lr.offset$df.residual, lower = FALSE)
#4
library(foreign)
pension <- read.dta("http://fmwww.bc.edu/ec-p/data/wooldridge2k/pension.dta")
head(pension)
str(pension)
#delete NAs
pension <- pension[!apply(is.na(pension), MARGIN=1,any),]
pension$pctstck[pension$pctstck==50] <- 1
pension$pctstck[pension$pctstck==100] <- 2
cols <- c("prftshr", "choice", "female", "married", "finc25", "finc35", "finc50",
"finc75", "finc100", "finc101", "black", "stckin89", "irain89", "inc")
pension[cols] <- lapply(pension[cols], factor)  ## as.factor() could also be used
cols <- c("prftshr", "choice", "female", "married", "finc25", "finc35", "finc50",
"finc75", "finc100", "finc101", "black", "stckin89", "irain89")
pension[cols] <- lapply(pension[cols], factor)  ## as.factor() could also be used
fit.pens1 <- gam(list(pctstck ~ choice, ~ choice),
data = pension, family = multinom(K=2))
summary(fit.pens1)
table(pension$choice,pension$pctstck)
mosaicplot(table(pension$choice,pension$pctstck), color=TRUE,
main="choice vs. pctstck",xlab="choice",ylab="pctstck")
#c
pension <- read.dta("http://fmwww.bc.edu/ec-p/data/wooldridge2k/pension.dta")
# omit na
pension <- pension[!apply(is.na(pension), MARGIN=1,any),]
# make income variable
pension$inc <- 0
pension$inc[pension$finc35 | pension$finc50] <- 1
pension$inc[pension$finc75 | pension$finc100 | pension$finc101] <- 2
pension$pctstck[pension$pctstck==0] <- 1
pension$pctstck[pension$pctstck==100] <- 2
pension$pctstck[pension$pctstck==50] <- 0
# make factors
cols <- c("prftshr", "choice", "female", "married", "finc25", "finc35", "finc50",
"finc75", "finc100", "finc101", "black", "stckin89", "irain89", "inc")
pension[cols] <- lapply(pension[cols], factor)  ## as.factor() could also be used
table(pension$inc,pension$pctstck)
table(pension$inc,pension$pctstck), color=TRUE,
main="income vs. pctstck",xlab="income",ylab="pctstck")
mosaicplot(table(pension$inc,pension$pctstck), color=TRUE,
main="income vs. pctstck",xlab="income",ylab="pctstck")
fit.pens2 <- gam(list(pctstck ~ choice + age + educ + female + married + black + inc + wealth89 + prftshr,
~ choice + age + educ + female + married + black + inc + wealth89 + prftshr),
data = pension, family = multinom(K = 2))
summary(fit.pens2)
pension$age <- sqrt(pension$age)
pension$educ <- sqrt(pension$educ)
fit.pens2 <- gam(list(pctstck ~ choice + age + educ + female + married + black + inc + wealth89 + prftshr,
~ choice + age + educ + female + married + black + inc + wealth89 + prftshr),
data = pension, family = multinom(K = 2))
summary(fit.pens2)
View(pension)
class(pension$pctstck)
pension$pctstck <- factor(pension$pctstck)
pension$pctstck <- factor(pension$pctstck, levels = ("50", "0", "100"))
pension$pctstck <- factor(pension$pctstck, levels = c("50", "0", "100"))
fit.pens2 <- gam(list(pctstck ~ choice + age + educ + female + married + black + inc + wealth89 + prftshr,
~ choice + age + educ + female + married + black + inc + wealth89 + prftshr),
data = pension, family = multinom(K = 2))
pension <- read.dta("http://fmwww.bc.edu/ec-p/data/wooldridge2k/pension.dta")
# omit na
pension <- pension[!apply(is.na(pension), MARGIN=1,any),]
# make income variable
pension$inc <- 0
pension$inc[pension$finc35 | pension$finc50] <- 1
pension$inc[pension$finc75 | pension$finc100 | pension$finc101] <- 2
pension$pctstck[pension$pctstck==0] <- 1
pension$pctstck[pension$pctstck==100] <- 2
pension$pctstck[pension$pctstck==50] <- 0
# make factors
cols <- c("prftshr", "choice", "female", "married", "finc25", "finc35", "finc50",
"finc75", "finc100", "finc101", "black", "stckin89", "irain89", "inc")
pension[cols] <- lapply(pension[cols], factor)  ## as.factor() could also be used
pension$age <- sqrt(pension$age)
pension$educ <- sqrt(pension$educ)
fit.pens2 <- gam(list(pctstck ~ choice + age + educ + female + married + black + inc + wealth89 + prftshr,
~ choice + age + educ + female + married + black + inc + wealth89 + prftshr),
data = pension, family = multinom(K = 2))
summary(fit.pens2)
library(nnet)
mod1 <- multinom(pctstck~choice+age+educ+female+married+black+inc
+wealth89+prftshr, data=pension)
summary(mod1)
pension$pctstck <- factor(pension$pctstck, levels = c("50", "0", "100"))
fit.pens2 <- gam(list(pctstck ~ choice + age + educ + female + married + black + inc + wealth89 + prftshr,
~ choice + age + educ + female + married + black + inc + wealth89 + prftshr),
data = pension, family = multinom(K = 2))
mod1 <- multinom(pctstck~choice+age+educ+female+married+black+inc
+wealth89+prftshr, data=pension)
View(pension)
#c
pension <- read.dta("http://fmwww.bc.edu/ec-p/data/wooldridge2k/pension.dta")
# make income variable
pension$inc <- 0
pension$inc[pension$finc35 | pension$finc50] <- 1
pension$inc[pension$finc75 | pension$finc100 | pension$finc101] <- 2
pension$pctstck[pension$pctstck==0] <- 1
pension$pctstck[pension$pctstck==100] <- 2
pension$pctstck[pension$pctstck==50] <- 0
# make factors
cols <- c("prftshr", "choice", "female", "married", "finc25", "finc35", "finc50",
"finc75", "finc100", "finc101", "black", "stckin89", "irain89", "inc")
pension[cols] <- lapply(pension[cols], factor)  ## as.factor() could also be used
pension$age <- sqrt(pension$age)
pension$educ <- sqrt(pension$educ)
pension$pctstck <- factor(pension$pch )
pension$pctstck <- factor(pension$pctstck)
mod1 <- multinom(pctstck~choice+age+educ+female+married+black+inc
+wealth89+prftshr, data=pension)
fit.pens2 <- gam(list(pctstck ~ choice + age + educ + female + married + black + inc + wealth89 + prftshr,
~ choice + age + educ + female + married + black + inc + wealth89 + prftshr),
data = pension, family = multinom(K = 2))
fit.pens2 <- gam(list(pctstck ~ choice + age + educ + female + married + black + inc + wealth89 + prftshr,
~ choice + age + educ + female + married + black + inc + wealth89 + prftshr),
data = pension, family = multinom(K = 2))
summary(mod1)
# make income variable
pension$inc <- NA
#c
pension <- read.dta("http://fmwww.bc.edu/ec-p/data/wooldridge2k/pension.dta")
# make income variable
pension$inc <- NA
pension$inc[pension$finc35 | pension$finc50] <- 1
pension$inc[pension$finc75 | pension$finc100 | pension$finc101] <- 2
pension$pctstck[pension$pctstck==0] <- 1
pension$pctstck[pension$pctstck==100] <- 2
pension$pctstck[pension$pctstck==50] <- 0
# make factors
cols <- c("prftshr", "choice", "female", "married", "finc25", "finc35", "finc50",
"finc75", "finc100", "finc101", "black", "stckin89", "irain89", "inc")
pension[cols] <- lapply(pension[cols], factor)  ## as.factor() could also be used
pension$age <- sqrt(pension$age)
pension$educ <- sqrt(pension$educ)
fit.pens2 <- gam(list(pctstck ~ choice + age + educ + female + married + black + inc + wealth89 + prftshr,
~ choice + age + educ + female + married + black + inc + wealth89 + prftshr),
data = pension, family = multinom(K = 2))
mod1 <- multinom(pctstck~choice+age+educ+female+married+black+inc
+wealth89+prftshr, data=pension)
summary(mod1)
#c
pension <- read.dta("http://fmwww.bc.edu/ec-p/data/wooldridge2k/pension.dta")
# omit na
# pension <- pension[!apply(is.na(pension), MARGIN=1,any),]
# make income variable
pension$inc <- NA
pension$inc[pension$finc35 | pension$finc50] <- 1
pension$inc[pension$finc75 | pension$finc100 | pension$finc101] <- 2
pension$inc <- factor(pension$inc,labels=
c("below 25'000","25'000 to 50'000", "above 50'000"))
#c
pension <- read.dta("http://fmwww.bc.edu/ec-p/data/wooldridge2k/pension.dta")
pension$inc <- NA
pension$inc[pension$finc25==1] <- 1
pension$inc[pension$finc35 | pension$finc50] <- 2
pension$inc[pension$finc75 | pension$finc100 | pension$finc101] <- 3
pension$inc <- factor(pension$inc,labels=
c("below 25'000","25'000 to 50'000", "above 50'000"))
# make factors
cols <- c("prftshr", "choice", "female", "married", "black", "stckin89", "irain89")
pension[cols] <- lapply(pension[cols], factor)  ## as.factor() could also be used
pension$age <- sqrt(pension$age)
pension$educ <- sqrt(pension$educ)
pension$pct <- factor(pension$pctstck, levels = c("50","0","100"),
ordered = FALSE)
mod1 <- multinom(pctstck~choice+age+educ+female+married+black+inc
+wealth89+prftshr, data=pension)
summary(mod1)
str(pension)
#c
pension <- read.dta("http://fmwww.bc.edu/ec-p/data/wooldridge2k/pension.dta")
pension$inc <- NA
pension$inc[pension$finc25==1] <- 1
pension$inc[pension$finc35 | pension$finc50] <- 2
pension$inc[pension$finc75 | pension$finc100 | pension$finc101] <- 3
pension$inc <- factor(pension$inc,labels=
c("below 25'000","25'000 to 50'000", "above 50'000"))
# make factors
cols <- c("pctstck", "prftshr", "choice", "female", "married", "black", "stckin89", "irain89")
pension[cols] <- lapply(pension[cols], factor)  ## as.factor() could also be used
pension$age <- sqrt(pension$age)
pension$educ <- sqrt(pension$educ)
pension$pct <- factor(pension$pctstck, levels = c("50","0","100"),
ordered = FALSE)
fit.pens2 <- gam(list(pctstck ~ choice + age + educ + female + married + black + inc + wealth89 + prftshr,
~ choice + age + educ + female + married + black + inc + wealth89 + prftshr),
data = pension, family = multinom(K = 2))
library(nnet)
mod1 <- multinom(pctstck~choice+age+educ+female+married+black+inc
+wealth89+prftshr, data=pension)
summary(mod1)
View(pension)
print(levels(pension$pct))
mod1 <- multinom(pct~choice+age+educ+female+married+black+inc
+wealth89+prftshr, data=pension)
summary(mod1)
fit.pens2 <- gam(list(pct ~ choice+age+educ+female+married+black+inc+wealth89+prftshr,
~ choice+age+educ+female+married+black+inc+wealth89+prftshr),
data = pension, family = multinom(K = 2))
fit.pens2 <- gam(list(numeric(pct) ~ choice+age+educ+female+married+black+inc+wealth89+prftshr,
~ choice+age+educ+female+married+black+inc+wealth89+prftshr),
data = pension, family = multinom(K = 2))
fit.pens2 <- gam(list(as.numeric(pct) ~ choice+age+educ+female+married+black+inc+wealth89+prftshr,
~ choice+age+educ+female+married+black+inc+wealth89+prftshr),
data = pension, family = multinom(K = 2))
fit.pens2 <- gam(list(pct ~ choice+age+educ+female+married+black+inc+wealth89+prftshr,
~ choice+age+educ+female+married+black+inc+wealth89+prftshr),
data = pension, family = multinom(K = 2))
summary(mod1)
mod2 <- multinom(pct~age+educ+female+married+black+inc+wealth89+prftshr, data=pension)
summary(mod2)
pchisq(deviance(mod2) - deviance(mod1), mod1$edf - mod2$edf, lower=FALSE)
exp(-0.4755586)
predict(mod1,type="probs",newdata=data.frame(choice="0",age=
sqrt(60), educ=sqrt(13.5),
female="0",married="0",
black="0",inc="above 50'000",
wealth89=200,prftshr="1"))
predict(mod1,type="probs",newdata=data.frame(choice="1",age=
sqrt(60), educ= sqrt(13.5),
female="0",married="0",
black="0",inc="above 50'000",
wealth89=200,prftshr="1"))
